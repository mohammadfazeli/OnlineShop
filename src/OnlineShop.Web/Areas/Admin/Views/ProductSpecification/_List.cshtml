@model OnlineShop.ViewModels.Area.Base.ProductSpecification.ProductSpecificationListDto

@{
    TempData["ParentId"] = Model.ProductId;
}

<div class="card _borderTop  _shadow ">
    <div class="card-header bg-light">
        <partial name="_CardHeader" model="CardHeaderTye.Index" />
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <div class="table-responsive">
            <table id="example2" class=" CustomDataTable  table table-bordered  table-hover  table-sm">
                <thead>
                    <tr>
                        <td style="width:15px;">#</td>
                        <td>@Html.DisplayNameFor(r => r.Id)</td>
                        <td>@Html.DisplayNameFor(r => r.SpecificationName)</td>
                        <td>@Html.DisplayNameFor(r => r.SpecificationValue)</td>
                        <td>@Html.DisplayNameFor(r => r.SortOrder)</td>
                        <td style="width:50px;">@Resource.Operation</td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <!-- /.card-body -->
</div>

<script>

       $(function () {

            $('.CustomDataTable').DataTable({
                "paging": true,
                "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": false,
                "autoWidth": false,
                "responsive": false,
                "language": {
                    "url": "/js/Persian.json",
                },

                "ajax": {
                        url: '/Admin/@ViewContext.RouteData.Values["controller"]/ReadData',
                        type: "GEt",
                        data: { productId:'@Model.ProductId' },
                        dataType: "json",
                    },

                "columns": [
                        { "data": null, className: "text-center ", "render": function (data, type, row, meta) {return meta.row + meta.settings._iDisplayStart + 1;}},
                        { "data": "id", className: "text-center ", visible: false },
                        { "data": "specificationName", className: "text-center "},
                        { "data": "specificationValue", className: "text-center "},
                        { "data": "sortOrder", className: "text-center "},
                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                return TableOperation(data['id'], '@ViewContext.RouteData.Values["area"]', '@ViewContext.RouteData.Values["controller"]'
                                );
                            }
                        }
                    ]
            });
       });
</script>