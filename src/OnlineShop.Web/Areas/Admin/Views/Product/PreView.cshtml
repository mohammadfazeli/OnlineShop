@model PaginatedList<OnlineShop.ViewModels.Area.Base.Products.ProdcutListDto>
@*https://docs.microsoft.com/en-us/aspnet/core/data/ef-mvc/sort-filter-page?view=aspnetcore-3.1#add-paging-to-students-index*@
<div id="ProductPreView">
    <div class="card _borderTop  _shadow ">
        <div class="card-header ">
            <partial name="_CardHeader" model="CardHeaderTye.Edit" />
        </div>
        <div class="card-body">
            <div class="row">
                @{
                    foreach(var item in Model)
                    {
                        <div class="col-md-3 col-lg-3 col-sm-12  col-xl-3  d-flex">
                            <div class="card">
                                <div class="  ">
                                    <partial name="_Lightgallery" model="@item.Id" />
                                </div>
                                <div class="card-body ">
                                    @*<CustomDisplay asp-for="@item.Name"></CustomDisplay>
                                        <CustomDisplay asp-for="@item.UserCode"></CustomDisplay>

                                        <CustomDisplay asp-for="@item.ForeignName"></CustomDisplay>
                                        <CustomDisplay asp-for="@item.Description"></CustomDisplay>*@

                                    @Html.LabelFor(x => item.Name) : @Html.DisplayFor(x => item.Name)
                                    @Html.LabelFor(x => item.UserCode) : @Html.DisplayFor(x => item.UserCode)
                                    @Html.LabelFor(x => item.ForeignName) : @Html.DisplayFor(x => item.ForeignName)
                                    @Html.LabelFor(x => item.Description) : @Html.DisplayFor(x => item.Description)
                                </div>
                                <div class="card-footer card-img-bottom">
                                    @Html.LabelFor(x => item.ProductGroupName) : @Html.DisplayFor(x => item.ProductGroupName)
                                </div>
                            </div>
                        </div>
                    }

                }
            </div>
        </div>
        <div class="card-footer text-center">
            <partial view-data='@new ViewDataDictionary(ViewData) { { "ActionName", "PreView" } , { "UpdateTargetId",""} }' name="_PaginatedFooter" model="@new PaginatedListvm() { HasNextPage=Model.HasNextPage, HasPreviousPage=Model.HasPreviousPage , PageIndex=Model.PageIndex, TotalPages=Model.TotalPages }" />
        </div>
    </div>
</div>