@model OnlineShop.ViewModels.Area.Base.ProductPriceModificatin.ProductPriceModificatinListDto

@{
    TempData["ParentId"] = Model.ProductDetailId;
}
<div class="card">
    <div class="card-header">
        <partial name="_CardHeader" model="OnlineShop.Common.Enum.CardHeaderTye.Index" />
    </div>

    <!-- /.card-header -->
    <div class="card-body">
        <div class="table-responsive">
            <table id="example2" class=" CustomDataTable  table table-bordered  table-hover  table-sm">
                <thead>
                    <tr>
                        <td style="width:15px;">#</td>
                        <td>@Html.DisplayNameFor(r => r.Id)</td>
                        <td>@Html.DisplayNameFor(r => r.OldPrice)</td>
                        <td>@Html.DisplayNameFor(r => r.NewPrice)</td>
                        <td>@Html.DisplayNameFor(r => r.strFromDate)</td>
                        <td>@Html.DisplayNameFor(r => r.InActive)</td>
                        <td style="width:50px;">@Resource.Operation</td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
    <!-- /.card-body -->
</div>

<script>

       $(function () {

           $('.CustomDataTable').DataTable({

                "paging": true,
               "lengthChange": true,
                "searching": true,
                "ordering": true,
                "info": true,
                "autoWidth": false,
                "responsive": false,
                "language": {
                    "url": "/js/Persian.json",
                },
                 "ajax": {
                        url: '/Identity/@ViewContext.RouteData.Values["controller"]/ReadData',
                        type: "GEt",
                        data: { productDetailId:'@Model.ProductDetailId' },
                        dataType: "json",
                    },

                "columns": [
                        { "data": null, className: "text-center ", "render": function (data, type, row, meta) {return meta.row + meta.settings._iDisplayStart + 1;}},
                        { "data": "id", className: "text-center ", visible: false },
                        { "data": "oldPrice", className: "text-center "},
                        { "data": "newPrice", className: "text-center "},
                        { "data": "strFromDate", className: "text-center " },
                        {
                            "data": "inActive", className: "text-center", type: "checkbox", dataType: Boolean,
                            render: function (data) {
                                if (data == true) {
                                    return '<input  type="checkbox" checked="checked" />'
                                } else {
                                    return '<input  type="checkbox" />'
                                }

                            }
                        },
                        {
                            "data": null,
                            "render": function (data, type, row, meta) {
                                return TableOperation(data['id'], '@ViewContext.RouteData.Values["area"]', '@ViewContext.RouteData.Values["controller"]'
                                );
                            }
                        }
               ]
            });
        });
</script>